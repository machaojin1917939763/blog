const e=JSON.parse('{"key":"v-c1a58016","path":"/demo/%E9%9D%A2%E8%AF%95%E9%A2%98.html","title":"","lang":"en-US","frontmatter":{"description":"什么是 CAS？CAS 原理？CAS 存在的三大问题 CAS 是一种无锁算法，全称是 Compare And Swap，中文叫比较交换。它的原理是让 CPU 先比较两个值是否相等，然后原子地更新某个位置的值。CAS 操作包含三个操作数：内存位置、预期数值和新值。如果内存位置的值等于预期数值，就用新值替换它，否则不修改并返回实际的值。 CAS 是一种乐观...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/demo/%E9%9D%A2%E8%AF%95%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Docs Demo"}],["meta",{"property":"og:description","content":"什么是 CAS？CAS 原理？CAS 存在的三大问题 CAS 是一种无锁算法，全称是 Compare And Swap，中文叫比较交换。它的原理是让 CPU 先比较两个值是否相等，然后原子地更新某个位置的值。CAS 操作包含三个操作数：内存位置、预期数值和新值。如果内存位置的值等于预期数值，就用新值替换它，否则不修改并返回实际的值。 CAS 是一种乐观..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-08-05T11:04:04.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2023-08-05T11:04:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-05T11:04:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是 CAS？CAS 原理？CAS 存在的三大问题","slug":"什么是-cas-cas-原理-cas-存在的三大问题","link":"#什么是-cas-cas-原理-cas-存在的三大问题","children":[]},{"level":2,"title":"Atomic 原子类有了解吗","slug":"atomic-原子类有了解吗","link":"#atomic-原子类有了解吗","children":[]},{"level":2,"title":"为什么有了 synchronized 还需要 Lock 接口？各自的适用场景是什么","slug":"为什么有了-synchronized-还需要-lock-接口-各自的适用场景是什么","link":"#为什么有了-synchronized-还需要-lock-接口-各自的适用场景是什么","children":[]},{"level":2,"title":"讲讲你对 AQS 的理解（AQS、Condition 底层原理）","slug":"讲讲你对-aqs-的理解-aqs、condition-底层原理","link":"#讲讲你对-aqs-的理解-aqs、condition-底层原理","children":[]},{"level":2,"title":"AbstractQueuedSynchronizer详细介绍一下基本原理，运行原理，以及其中的CLH队列的工作原理","slug":"abstractqueuedsynchronizer详细介绍一下基本原理-运行原理-以及其中的clh队列的工作原理","link":"#abstractqueuedsynchronizer详细介绍一下基本原理-运行原理-以及其中的clh队列的工作原理","children":[]},{"level":2,"title":"那synchronized的monitor数据结构是什么样子的？","slug":"那synchronized的monitor数据结构是什么样子的","link":"#那synchronized的monitor数据结构是什么样子的","children":[]},{"level":2,"title":"synchronized的entryList数据结构是什么样的，原理是什么？","slug":"synchronized的entrylist数据结构是什么样的-原理是什么","link":"#synchronized的entrylist数据结构是什么样的-原理是什么","children":[]},{"level":2,"title":"那synchronized的entryList和AQS的CLH队列是相同的运行原理吗？还是说AQS得是双向链表，而CLH是单向的链表","slug":"那synchronized的entrylist和aqs的clh队列是相同的运行原理吗-还是说aqs得是双向链表-而clh是单向的链表","link":"#那synchronized的entrylist和aqs的clh队列是相同的运行原理吗-还是说aqs得是双向链表-而clh是单向的链表","children":[]},{"level":2,"title":"那AQS的非公平锁也是基于CLH队列吗？","slug":"那aqs的非公平锁也是基于clh队列吗","link":"#那aqs的非公平锁也是基于clh队列吗","children":[]},{"level":2,"title":"你刚才说synchronized将线程封装成Node节点放到双向链表里面的时候，使用的是CAS操作，但是你说的synchronized是基于JVM的操作指令来进行加锁和解锁的，你不觉得有冲突吗？","slug":"你刚才说synchronized将线程封装成node节点放到双向链表里面的时候-使用的是cas操作-但是你说的synchronized是基于jvm的操作指令来进行加锁和解锁的-你不觉得有冲突吗","link":"#你刚才说synchronized将线程封装成node节点放到双向链表里面的时候-使用的是cas操作-但是你说的synchronized是基于jvm的操作指令来进行加锁和解锁的-你不觉得有冲突吗","children":[]},{"level":2,"title":"你刚才说AQS的CLH队列不涉及超时和中断，是不是就代表AQS不支持超时和中断？","slug":"你刚才说aqs的clh队列不涉及超时和中断-是不是就代表aqs不支持超时和中断","link":"#你刚才说aqs的clh队列不涉及超时和中断-是不是就代表aqs不支持超时和中断","children":[]}],"git":{"createdTime":1691233444000,"updatedTime":1691233444000,"contributors":[{"name":"machaojin","email":"1917939763@qq.com","commits":1}]},"readingTime":{"minutes":16.33,"words":4898},"filePathRelative":"demo/面试题.md","localizedDate":"August 5, 2023","autoDesc":true}');export{e as data};
